{"version":3,"sources":["logo.svg","actions/types.js","reducers/auth.js","reducers/index.js","store.js","actions/post.js","components/Compose.js","components/Post.js","components/Load.js","components/PostBox.js","components/NotificationBox.js","components/Notification.js","components/NavBar.js","actions/auth.js","components/Footer.js","hoc/Layout.js","containers/Home.js","components/CSRFToken.js","containers/Login.js","containers/Register.js","App.js","reportWebVitals.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","AUTHENTICATE_SUCCESS","AUTHENTICATE_FAIL","POST_FAIL","initState","isAuthenticated","username","email","combineReducers","auth","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","create","content","dispatch","a","config","credentials","headers","Cookies","get","body","JSON","stringify","axios","post","process","res","data","error","console","connect","useState","composeForm","setComposeForm","className","onSubmit","e","log","preventDefault","onChange","target","name","value","placeholder","required","Post","likes","icon","faHeart","color","Load","faSyncAlt","loaded","setLoaded","posts","setPosts","fetchData","useEffect","tasksFromServer","iterate","getPosts","postList","map","index","authComp","NotificationBox","open","Notification","children","setNotificationBox","nodeRef","React","useRef","onClick","faBell","CSSTransition","in","classNames","timeout","unmountOnExit","ref","logout","login","follow","authNav","exact","to","anonNav","Footer","checkAuthenticated","mode","Home","CSRFToken","csrftoken","setcsrftoken","password","Login","loginForm","setLoginForm","register","confirmation","registerForm","setRegisterForm","accountCreated","setAccountCreated","App","path","component","Register","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9aaa8980.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL'\nexport const AUTHENTICATE_SUCCESS = 'AUTHENTICATE_SUCCESS'\nexport const AUTHENTICATE_FAIL = 'AUTHENTICATE_FAIL'\n\n// posts\nexport const POST_SUCCESS = 'POST_SUCCESS'\nexport const POST_FAIL = 'POST_FAIL'\n","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    AUTHENTICATE_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    AUTHENTICATE_FAIL\n} from '../actions/types'\n\nconst initState = {\n    isAuthenticated: null,\n    username: '',\n    email: ''\n}\n\nexport default function(state = initState, action) {\n    const {type, payload} = action;\n\n    switch(type) {\n        case AUTHENTICATE_SUCCESS:\n        case AUTHENTICATE_FAIL:\n            return {\n                ...state,\n                isAuthenticated: payload\n            }\n        case REGISTER_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true,\n                username: payload\n            }\n        case LOGOUT_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false,\n                username: ''\n            }\n        case REGISTER_FAIL:\n        case LOGIN_FAIL:\n        case LOGOUT_FAIL:\n            return state\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport auth from './auth'\n\nexport default combineReducers({\n    auth\n})","import {createStore, applyMiddleware} from 'redux'\n// lets us analyze redux state\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst initState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore( \n    rootReducer,\n    initState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store","import Cookies from 'js-cookie';\nimport axios from 'axios';\nimport {\n    POST_SUCCESS,\n    POST_FAIL\n} from './types'\n\nexport const create = (content) => async dispatch => {\n    const config = {\n        credentials: 'include',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({ content });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/network/create`, body, config)\n\n        if (res.data.error) {\n            console.error(res.data.error)\n            dispatch({\n                type: POST_FAIL\n            });\n        } else {\n            dispatch({\n                type: POST_SUCCESS\n            })\n        }\n    } catch(err) {\n        dispatch({\n            type: POST_FAIL\n        })\n    }\n}","import React, { useState } from 'react'\nimport { connect } from 'react-redux';\nimport { create } from '../actions/post';\n\nfunction Compose() {\n    const [composeForm, setComposeForm] = useState({\n        content: ''\n    })\n\n    const {content} = composeForm\n    \n    const onChange = e => setComposeForm({...composeForm, [e.target.name]: e.target.value })\n\n    const onSubmit = e => {\n        console.log(composeForm)\n        e.preventDefault()\n        create(content)\n    }\n\n    return (\n        <div className=\"compose_container\">\n            <div className=\"compose_section\">\n                <div className=\"image_circle\"><div className=\"inner_image\"></div><div className=\"inner_image2\"></div></div>\n                <form onSubmit={e => onSubmit(e)}>\n                <input type=\"text\" onChange={e => onChange(e)} name=\"content\" className=\"compose_in\" value={content} placeholder=\"Enter Username\" required></input>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(null, {create} )(Compose)","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\n\nfunction Post({body, username, likes}) {\n    return (\n        <div className=\"post_container\">\n            <div className=\"profile_section\">\n                <div className=\"image_circle\">\n                    <div className=\"inner_image\"></div>\n                    <div className=\"inner_image2\"></div>\n                </div>\n                <div className=\"username_post\"><p>{username}</p></div>\n            </div>\n            <div className=\"break\"></div>\n            <div className=\"body_section\">\n                <span>{body}</span>\n                <span><FontAwesomeIcon icon={faHeart} color={\"grey\"}>\n                    </FontAwesomeIcon> {likes}\n                </span>\n            </div>\n        </div>\n    )\n}\n\nexport default Post","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction Load() {\n    return (\n        <div className=\"load\">\n            <p> loading </p>\n            <FontAwesomeIcon className=\"load_spin\" icon={faSyncAlt}/>\n            \n        </div>\n    )\n}\n\nexport default Load\n","import react, { useState, useEffect } from 'react'\nimport Post from \"./Post.js\"\nimport Compose from \"./Compose.js\"\nimport axios from 'axios'\nimport Load from './Load.js'\nimport { connect } from 'react-redux'\n\nfunction PostBox({isAuthenticated}) {\n    const [loaded, setLoaded] = useState(false);\n    const [posts, setPosts] = useState([])\n    \n    const fetchData = async () => {\n        let res\n        try {\n            res = await axios.get(`${process.env.REACT_APP_API_URL}/network/posts`)\n        } catch(err) {}\n\n        return res;\n    };\n\n    useEffect(() => {\n        const getPosts = async () => {\n            const tasksFromServer = await fetchData()\n            setPosts(tasksFromServer.data.iterate[1]);\n        }\n\n        getPosts();\n        setLoaded(true);\n    }, []);\n\n    const postList = posts.map((post, index) => {\n        return (\n            <Post body={post.content} username={post.username} likes={post.likes}></Post>\n        )\n    })\n\n    console.log(posts)\n\n    const authComp = (\n        <>\n            <Compose/>\n                <div className=\"break_out\"/>\n        </>\n    )\n    \n\n    return (\n    <div className=\"postBox_container\">\n        {isAuthenticated && authComp} \n        \n            {loaded ? postList : <Load/>}\n    </div>\n    )\n\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, null)(PostBox)","function NotificationBox({open}) {\n    return (\n        \n        \n        <div className=\"notify_box\">\n            <div className=\"notification_item\">\n                <p>notification</p>\n            </div>\n            <div className=\"notification_item\">\n                <p>notification</p>\n            </div>     \n            <div className=\"notification_item\">\n                <p>notification</p>\n            </div>\n            <div className=\"notification_item\">\n                <p>notification</p>\n            </div>\n  \n        </div>\n\n    )\n}\n\nexport default NotificationBox","import React, { useState } from 'react'\nimport NotificationBox from './NotificationBox.js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBell } from '@fortawesome/free-solid-svg-icons'\nimport { CSSTransition } from 'react-transition-group';\n\nfunction Notification({children}) {\n    const [open, setNotificationBox] = useState(false);\n    const nodeRef = React.useRef(null)\n\n    return (\n        <div onClick={() => setNotificationBox(!open)}>\n            <div className=\"bell\">\n                <FontAwesomeIcon icon={faBell}></FontAwesomeIcon>\n            </div>\n            <CSSTransition\n                in={open}\n                nodeRef={nodeRef}\n                classNames=\"menu-primary\"\n                timeout={1000}\n                unmountOnExit\n            >\n                <div ref={nodeRef}>\n                    <NotificationBox/>\n                </div>\n            </CSSTransition>\n        </div>\n    )\n}\n\nexport default Notification","\nimport {NavLink, Link} from 'react-router-dom';\nimport Notification from './Notification.js';\nimport NotificationBox from './NotificationBox.js';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/auth';\nimport { set } from 'js-cookie';\n\nfunction NavBar({login, logout, follow, isAuthenticated }) {\n    \n    const authNav = (\n        <div className=\"navbar_wrapper\">\n            <Link exact to=\"/\">Home</Link>\n            <NavLink exact to=\"/follow\">Follow</NavLink>\n            <NavLink exact to=\"/logout\" onClick={logout}>Log Out</NavLink>\n            <Notification>\n                <NotificationBox/>\n            </Notification>\n        </div>\n    );\n    \n    const anonNav = (\n        <div className=\"navbar_wrapper\">\n            <Link exact to=\"/\">Home</Link>\n            <NavLink exact to=\"/login\">Log In</NavLink>\n            <NavLink exact to=\"/register\">Register</NavLink>\n            <Notification>\n                <NotificationBox/>\n            </Notification>\n        </div>\n    );\n    \n\n    return (\n        <div className=\"navbar_container\">\n            {(isAuthenticated) ? authNav : anonNav}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, {logout})(NavBar);","import Cookies from 'js-cookie';\nimport axios from 'axios';\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    AUTHENTICATE_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    AUTHENTICATE_FAIL\n} from './types'\n\n// it matters what order these variables are.\nexport const register = (username, password, email, confirmation) => async dispatch => {\n    const config = {\n        credentials: 'include',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({ username, password, confirmation, email });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/network/register`, body, config)\n\n        if (res.data.error) {\n            console.error(res.data.error)\n            dispatch({\n                type: REGISTER_FAIL\n            });\n        } else {\n            dispatch({\n                type: REGISTER_SUCCESS\n            })\n        }\n    } catch(err) {\n        dispatch({\n            type: REGISTER_FAIL\n        })\n    }\n}\n\n// redux thunk lets us do dispatch\nexport const login = (username, password) => async dispatch => {\n    const config = {\n        credentials: 'include',\n        mode: 'same-origin',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFTOKEN': Cookies.get('csrftoken')\n        }\n    }\n    const body = JSON.stringify({ username, password })\n\n    try {\n        const res = await axios.post(`http://localhost:8000/network/login`, body, config)\n\n        if (res.data.error) {\n            console.log(res.data.error)\n            dispatch({\n                type: LOGIN_FAIL\n            })\n            // load user\n        } else {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data.username\n            })\n        }\n\n    } catch(err) {\n        dispatch({\n            type: LOGIN_FAIL\n        })\n\n    }\n\n}\n\n// redux thunk lets us do dispatch\nexport const checkAuthenticated = () => async dispatch => {\n    const config = {\n        credentials: 'include',\n        mode: 'same-origin',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n    }\n\n    try {\n        const res = await axios.get(`http://localhost:8000/network/authenticated`, config)\n\n        if (res.data.error || res.data.isAuthenticated === 'error') {\n            dispatch({\n                type: AUTHENTICATE_FAIL,\n                payload: false\n            })\n        } else if (res.data.isAuthenticated === \"success\") {\n            dispatch({\n                type: AUTHENTICATE_SUCCESS,\n                payload: true\n            })\n        }\n\n    } catch(err) {\n        dispatch({\n            type: AUTHENTICATE_FAIL,\n            payload: false\n        })\n\n    }\n\n}\n\nexport const logout = () => async dispatch => {\n    const config = {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFTOKEN': Cookies.get('csrftoken')\n        }\n    }\n\n    const body = JSON.stringify({\n        'withCredentials': true\n    });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/network/logout`, body, config)\n\n        if (res.data.error) {\n            console.log(res.data.error)\n            dispatch({\n                type: LOGOUT_FAIL\n            })\n        } else {\n            dispatch({\n                type: LOGOUT_SUCCESS\n            })\n        }\n\n    } catch(err) {\n        dispatch({\n            type: LOGOUT_FAIL\n        })\n\n    }\n\n}","function Footer() {\n    return (\n        <div className=\"footer\">\n            <span>Footer</span>\n        </div>\n    )\n}\n\nexport default Footer","import React, {useEffect, useState} from 'react';\nimport Navbar from \"../components/NavBar\";\nimport {connect} from 'react-redux';\nimport { checkAuthenticated} from '../actions/auth';\nimport NotificationBox from '../components/NotificationBox';\n\nconst Layout = ({ children, checkAuthenticated }) => {\n    useEffect(() => {\n        checkAuthenticated();\n    }, []);\n    \n    return (\n        <>\n            <Navbar/>\n            <header className=\"App-header\">\n            {children}\n            </header>\n        </>\n    )\n}\n\nexport default connect(null, {checkAuthenticated})(Layout)","import axios from 'axios';\nimport React from 'react';\nimport PostBox from '../components/PostBox'\n\nconst Home = () => {\n   return ( \n   <div>\n        <PostBox/>\n    </div>\n    )\n}\n\nexport default Home","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Cookies from 'js-cookie'\n\nconst CSRFToken = () => {\n    const [csrftoken, setcsrftoken] = useState('');\n\n    \n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                await axios.get(`${process.env.REACT_APP_API_URL}/network/csrf_cookie`)\n                setcsrftoken(Cookies.get('csrftoken'));\n                console.log(\"successfully fetched csrf\");\n            } catch(err) {\n                console.error(\"an error occured fetching csrf\");\n            }\n        };\n\n        fetchData();\n        console.log(csrftoken);\n    }, []);\n\n    return (\n        <input type=\"text\" name=\"csrfmiddlewaretoken\" value={csrftoken}/>\n    )\n}\n\nexport default CSRFToken;","import React, { useState } from 'react';\nimport CSRFToken from '../components/CSRFToken';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/auth';\n\nconst Login = ({login, isAuthenticated}) => {\n    const [loginForm, setLoginForm] = useState({\n        username: '',\n        password: ''\n    })\n\n    const {username, password} = loginForm\n\n    const onChange = e => setLoginForm({...loginForm, [e.target.name]: e.target.value })\n\n    const onSubmit = e => {\n        console.log(Login)\n        e.preventDefault()\n\n        login(username, password)\n    }\n\n    if (isAuthenticated) {\n        return <Redirect to=\"/\"/>\n    }\n\n    return (\n    <>\n    <h1>Log Into your Account.</h1>\n    <div className=\"form_container\">\n        \n        <form className=\"form_wrapper\" onSubmit={e => onSubmit(e)}>\n            <CSRFToken />\n            <div className=\"input_field\">\n                <label>Username</label>\n                <input type=\"text\" onChange={e => onChange(e)} name=\"username\" className=\"registration_input\" value={username} placeholder=\"Enter Username\" required></input>\n            </div>\n            <div className=\"input_field\">\n                <label>Password</label>\n                <input type=\"password\" onChange={e => onChange(e)} name=\"password\" className=\"registration_input\" value={password} placeholder=\"Enter Password\" required></input>\n            </div>\n            <input type=\"submit\" className=\"submit_button\" value=\"Log in\"></input>\n        </form>\n    </div>\n    </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, {login})(Login);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { register } from '../actions/auth';\nimport { Redirect } from 'react-router-dom';\nimport CSRFToken from '../components/CSRFToken';\n\nconst Register = ({ register, isAuthenticated }) => {\n    const [registerForm, setRegisterForm] = useState({\n        username: '',\n        email: '',\n        password: '',\n        confirmation: ''\n    })\n    const [accountCreated, setAccountCreated] = useState(false)\n\n    // Set default as empty\n    const {username, email, password, confirmation} = registerForm\n\n    const onChange = e => setRegisterForm({...registerForm, [e.target.name]: e.target.value })\n\n    // maybe add something to live check if username/email already exists.\n\n    const onSubmit = e => {\n        console.log(registerForm)\n        e.preventDefault()\n\n        if (password === confirmation) {\n            register(username, password, email, confirmation);\n            setAccountCreated(true);\n        }\n    }\n\n    if (accountCreated) {\n        return <Redirect to=\"/login\"/>\n    } else if (isAuthenticated) {\n        return <Redirect to=\"/\"/>\n    }\n\n    \n    return ( \n    <>\n    <h1>Register for an Account.</h1>\n    <div className=\"form_container\">\n        \n        <form className=\"form_wrapper\" onSubmit={e => onSubmit(e)}>\n            <CSRFToken />\n            <div className=\"input_field\">\n                <label>Username</label>\n                <input type=\"text\" onChange={e => onChange(e)} name=\"username\" className=\"registration_input\" value={username} placeholder=\"Enter Username\" required></input>\n            </div>\n            <div className=\"input_field\">\n                <label>Email</label>\n                <input type=\"email\" onChange={e => onChange(e)} name=\"email\" className=\"registration_input\" value={email} placeholder=\"Enter email address\" required></input>\n            </div>\n            <div className=\"input_field\">\n                <label>Password:</label>\n                <input type=\"password\" onChange={e => onChange(e)} name=\"password\" className=\"registration_input\" value={password} required></input>\n            </div>\n            <div className=\"input_field\">\n                <label>Re-enter password:</label>\n                <input type=\"password\" onChange={e => onChange(e)} name=\"confirmation\" className=\"registration_input\" value={confirmation} required></input>\n            </div>\n            <input type=\"submit\" className=\"submit_button\" value=\"register\"></input>\n        </form>\n    </div>\n    </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, {register} )(Register)","import logo from './logo.svg';\nimport './App.css';\n\n// Get redux in app\nimport {Provider} from 'react-redux'\nimport store from './store'\n\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport Compose from \"./components/Compose.js\"\nimport PostBox from \"./components/PostBox.js\"\nimport Post from \"./components/Post.js\"\nimport NavBar from \"./components/NavBar.js\"\nimport Footer from \"./components/Footer.js\"\n\nimport Layout from \"./hoc/Layout.js\"\nimport Home from \"./containers/Home.js\"\nimport Login from \"./containers/Login.js\"\nimport Register from \"./containers/Register.js\"\nimport Notification from './components/Notification'\nimport NotificationBox from './components/NotificationBox'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoffee, faSyncAlt } from '@fortawesome/free-solid-svg-icons'\n\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\n\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Router>\n        \n          <Layout>\n            <Route exact path='/' component={Home}/>\n            <Route exact path='/register' component={Register}/>\n            <Route exact path='/login' component={Login}/>\n            \n          </Layout>\n          \n        </Router>\n        <Footer></Footer>\n        {/* <button onClick={Login}></button> */}\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}