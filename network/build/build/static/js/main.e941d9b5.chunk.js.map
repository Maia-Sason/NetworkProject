{"version":3,"sources":["logo.svg","actions/types.js","reducers/auth.js","reducers/user.js","reducers/index.js","store.js","components/CSRFToken.js","components/Compose.js","actions/post.js","components/Post.js","components/Load.js","components/PostBox.js","components/NotificationBox.js","components/Notification.js","actions/user.js","components/NavBar.js","actions/auth.js","components/Footer.js","hoc/Layout.js","containers/Home.js","containers/Login.js","containers/Register.js","App.js","reportWebVitals.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","AUTHENTICATE_SUCCESS","AUTHENTICATE_FAIL","USER_SUCCESS","USER_FAIL","POST_SUCCESS","POST_FAIL","initState","isAuthenticated","username","email","liking","combineReducers","auth","state","action","type","payload","user","id","likes","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","CSRFToken","useState","csrftoken","setcsrftoken","useEffect","getCookie","name","cookieValue","document","cookie","cookies","split","console","log","i","length","trim","substring","decodeURIComponent","a","axios","get","process","error","fetchData","value","connect","create","content","dispatch","config","credentials","headers","Cookies","body","JSON","stringify","post","res","data","createdPost","composeForm","setComposeForm","className","onSubmit","e","preventDefault","onChange","target","placeholder","required","sessionUser","sessionLikes","update","postID","put","like","timestamp","originalLike","setLike","editing","setEditing","bodyPost","setBodyPost","editForm","setEditForm","includes","end","start","mid","binarySearchPostId","EditPost","onClick","icon","faHeart","color","Load","faSyncAlt","loaded","posts","getPosts","setCreated","postList","map","index","creator","authComp","NotificationBox","open","Notification","children","setNotificationBox","nodeRef","React","useRef","faBell","CSSTransition","in","classNames","timeout","unmountOnExit","ref","get_user","logout","login","follow","authNav","exact","to","anonNav","Footer","checkAuthenticated","mode","Home","setLoaded","setPosts","tasksFromServer","iterate","password","Login","loginForm","setLoginForm","register","confirmation","registerForm","setRegisterForm","accountCreated","setAccountCreated","App","path","component","Register","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4MAAe,I,4CCAFA,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAa,aACbC,EAAiB,iBACjBC,EAAc,cACdC,EAAuB,uBACvBC,EAAoB,oBAGpBC,EAAe,eACfC,EAAY,YAIZC,EAAe,eACfC,EAAY,YCHnBC,EAAY,CACdC,gBAAiB,MCTfD,EAAY,CACdC,gBAAiB,KACjBC,SAAU,GACVC,MAAO,GACPC,OAAQ,ICLGC,4BAAgB,CAC3BC,KFYW,WAAqC,IAA5BC,EAA2B,uDAAnBP,EAAWQ,EAAQ,uCACxCC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,QAEb,OAAOD,GACH,KAAKf,EACL,KAAKC,EACD,OAAO,2BACAY,GADP,IAEIN,gBAAiBS,IAEzB,KAAKtB,EACD,OAAO,2BACAmB,GADP,IAEIN,iBAAiB,IAEzB,KAAKX,EACD,OAAO,2BACAiB,GADP,IAEIN,iBAAiB,IAEzB,KAAKT,EACD,OAAO,2BACAe,GADP,IAEIN,iBAAiB,IAEzB,KAAKH,EACL,KAAKC,EACL,KAAKV,EACL,KAAKE,EACL,KAAKE,EAEL,QACI,OAAOc,IE3CfI,KDMW,WAAqC,IAA5BJ,EAA2B,uDAAnBP,EAAWQ,EAAQ,uCACxCC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,QAEb,OAAOD,GACH,KAAKb,EACD,OAAO,2BACAW,GADP,IAEIK,GAAIF,EAAQE,GACZV,SAAUQ,EAAQR,SAClBC,MAAOO,EAAQP,MACfC,OAAQM,EAAQG,QAIxB,KAAKhB,EACD,OAAO,2BACAU,GADP,IAEIK,GAAI,GACJV,SAAU,GACVC,MAAO,GACPC,OAAQ,KAEhB,QACI,OAAOG,ME3BbO,EAAa,CAACC,KAQLC,EANDC,sBACVC,EALc,GAOdC,8BAAoBC,kBAAe,WAAf,EAAmBN,K,8FCoC5BO,EA7CG,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACbC,EADa,KACFC,EADE,KAwCpB,OArCAC,qBAAU,WACN,IAAMC,EAAY,SAACC,GACf,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAAe,CAC3C,IAAMC,EAAUF,SAASC,OAAOE,MAAM,KACtCC,QAAQC,IAAIH,GACZ,IAAK,IAAII,EAAI,EAAGA,EAAIJ,EAAQK,OAAQD,IAAK,CACrC,IAAML,EAASC,EAAQI,GAAGE,OAG1B,GADAJ,QAAQC,IAAIJ,EAAOQ,UAAU,EAAGX,EAAKS,OAAS,IAC1CN,EAAOQ,UAAU,EAAGX,EAAKS,OAAS,KAAQT,EAAO,IAAM,CACvDC,EAAcW,mBAAmBT,EAAOQ,UAAUX,EAAKS,OAAS,IAChE,aAIRH,QAAQC,IAAI,8BAGhB,OADAD,QAAQC,IAAIN,GACLA,IAGI,uCAAG,sBAAAY,EAAA,+EAEJC,IAAMC,IAAN,UAAaC,wBAAb,yBAFI,OAGVV,QAAQC,IAAI,6BAHF,+CAKVD,QAAQW,MAAM,kCALJ,wDAAH,qDASfC,GACArB,EAAaE,EAAU,cACvBO,QAAQC,IAAIR,EAAU,cACtBO,QAAQC,IAAIX,KACb,IAGC,uBAAOd,KAAK,SAASkB,KAAK,sBAAsBmB,MAAOvB,KCPhDwB,kBAAQ,KAAO,CAACC,OC/BT,SAACC,GAAD,8CAAa,WAAMC,GAAN,mBAAAV,EAAA,6DACzBW,EAAS,CACXC,YAAa,UACbC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,cAAeC,IAAQZ,IAAI,eAI7Ba,EAAOC,KAAKC,UAAU,CAAER,YAVC,kBAaTR,IAAMiB,KAAN,UAAcf,wBAAd,mBAA8DY,EAAMJ,GAb3D,QAarBQ,EAbqB,QAenBC,KAAKhB,OACTX,QAAQW,MAAMe,EAAIC,KAAKhB,OACvBM,EAAS,CACLzC,KAAMV,KAGVmD,EAAS,CACLzC,KAAMX,IAtBa,gDA0B3BoD,EAAS,CACLzC,KAAMV,IA3BiB,yDAAb,wDD+BPgD,EAhCf,YAA2C,IAAxBC,EAAuB,EAAvBA,OAAQa,EAAe,EAAfA,YAAe,EACAvC,mBAAS,CAC3C2B,QAAS,KAFyB,mBAC/Ba,EAD+B,KAClBC,EADkB,OAIRzC,oBAAS,GAJD,mBAM/B2B,GAN+B,UAMpBa,EAAXb,SAYP,OACI,qBAAKe,UAAU,oBAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,eAAf,UAA8B,qBAAKA,UAAU,gBAAoB,qBAAKA,UAAU,oBAChF,uBAAMC,SAAU,SAAAC,GAAC,OAZZ,SAAAA,GACbA,EAAEC,iBACFnB,EAAOC,GACPhB,QAAQC,IAAI4B,GACZD,IACAE,EAAe,CAACd,QAAS,KAOIgB,CAASC,IAA9B,UACA,cAAC,EAAD,IACA,uBAAOzD,KAAK,OAAO2D,SAAU,SAAAF,GAAC,OAhBzB,SAAAA,GAAC,OAAIH,EAAe,2BAAID,GAAL,kBAAmBI,EAAEG,OAAO1C,KAAOuC,EAAEG,OAAOvB,SAgBlCsB,CAASF,IAAIvC,KAAK,UAAUqC,UAAU,aAAalB,MAAOG,EAASqB,YAAY,uBAAuBC,UAAQ,e,gBEoEhK,IAMexB,eANS,SAAAxC,GAAK,MAAK,CAC9BiE,YAAajE,EAAMI,KACnB8D,aAAclE,EAAMI,KAAKP,OACzBH,gBAAiBM,EAAMD,KAAKL,mBAGQ,CAACyE,ODjEnB,SAACzB,EAAS0B,GAAV,8CAAqB,WAAMzB,GAAN,mBAAAV,EAAA,6DACjCW,EAAS,CACXC,YAAa,UACbC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,cAAeC,IAAQZ,IAAI,eAI7Ba,EAAOC,KAAKC,UAAU,CAAER,YACxBrC,EAAK+D,EAX4B,kBAcjBlC,IAAMmC,IAAN,UAAajC,wBAAb,2BAA6D/B,GAAM2C,EAAMJ,GAdxD,uHAArB,uDCiE2B0B,KD9C7B,SAACjE,GAAD,8CAAQ,WAAMsC,GAAN,iBAAAV,EAAA,6DAClBW,EAAS,CACXC,YAAa,UACbC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,cAAeC,IAAQZ,IAAI,eAI7Ba,EAAOC,KAAKC,UAAU,CACxB,iBAAmB,IAXC,kBAeFhB,IAAMmC,IAAN,UAAajC,wBAAb,yBAA2D/B,GAAM2C,EAAMJ,GAfrE,uHAAR,wDC8CLJ,EAjGf,YAAiH,IAAlGQ,EAAiG,EAAjGA,KAAM3C,EAA2F,EAA3FA,GAAIV,EAAuF,EAAvFA,SAAUW,EAA6E,EAA7EA,MAAOiE,EAAsE,EAAtEA,UAAWN,EAA2D,EAA3DA,YAAaC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,OAAQzE,EAAwB,EAAxBA,gBAAiB4E,EAAO,EAAPA,KAAO,EAE5EvD,oBAAS,GAFmE,mBAErGyD,EAFqG,KAEvFC,EAFuF,OAG9E1D,oBAAS,GAHqE,mBAGrG2D,EAHqG,KAG5FC,EAH4F,OAI5E5D,mBAASiC,GAJmE,mBAIrG4B,EAJqG,KAI3FC,EAJ2F,OAK5E9D,mBAAS,CAAC2B,QAASM,IALyD,mBAKrG8B,EALqG,KAK3FC,EAL2F,KAO5G7D,qBAAU,WACNQ,QAAQC,IAAIsC,EAAY3D,MAAQ,KAChCoB,QAAQC,IAAIsC,EAAY3D,MAAM0E,SAAS3E,IAmBvCoE,EAjB2B,WAGvB,IAFA,IAAIQ,EAAMf,EAAarC,OAAS,EAC5BqD,EAAQ,EACLA,GAASD,GAAK,CACjB,IAAIE,EAAMD,GAASD,EAAMC,GAAS,EAClC,GAAI7E,IAAO6D,EAAaiB,GACpB,OAAO,EAEP9E,EAAK6D,EAAaiB,GAClBD,EAAQC,EAAM,EAEdF,EAAME,EAAM,EAGpB,OAAO,EAGHC,MACT,IA7ByG,IA+BrG1C,EAAWoC,EAAXpC,QAsBD2C,EACF,mCACA,sBAAM3B,SAAU,SAAAC,GAAC,OApBJ,SAAAA,GACbjC,QAAQC,IAAImD,GACZnB,EAAEC,iBACFO,EAAOzB,EAASrC,GAChBwE,EAAYnC,GACZiC,GAAYD,GAeShB,CAASC,IAA9B,SACI,uBAAOvC,KAAK,UAAUqC,UAAU,qBAAqBlB,MAAOG,EAASmB,SAAU,SAAAF,GAAC,OAvBvE,SAAAA,GAAC,OAAIoB,EAAY,2BAAID,GAAL,kBAAgBnB,EAAEG,OAAO1C,KAAOuC,EAAEG,OAAOvB,SAuBkBsB,CAASF,UAKrG,OACI,sBAAKF,UAAU,iBAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,oBAEnB,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,gBAAf,SAA+B,4BAAI9D,MACnC,qBAAK8D,UAAU,YAAf,SAA2B,4BAAIc,YAGvC,qBAAKd,UAAU,UACf,sBAAKA,UAAU,eAAf,UACKiB,EAAUW,EAAW,+BAAOT,IAC7B,sBAAKnB,UAAU,iBAAf,UACI,qCAAQ/D,EAAmB,cAAC,IAAD,CAAiB+D,UAAS,oBAAee,GAAgB,oBAAsBc,QAAS,SAAC3B,GAAD,OA5B/Hc,GAASD,QACTF,EAAKjE,IA2B8IkF,KAAMC,IAASC,MAAO,SAClI,cAAC,IAAD,CAAiBF,KAAMC,IAASC,MAAO,YAIlE,+BAAOjB,EAAelE,EAAQ,EAAIA,IACjC2D,EAAYtE,WAAaA,GAC1B,yBAAQ2F,QAAS,SAAC3B,GAxC9BgB,GAAYD,IAwCuCnC,MAAO,OAA9C,cAAwDmC,EAAU,IAAM,sBC9E7EgB,MAVf,WACI,OACI,sBAAKjC,UAAU,OAAf,UACI,0CACA,cAAC,IAAD,CAAiBA,UAAU,YAAY8B,KAAMI,UCkCzD,IAIenD,eAJS,SAAAxC,GAAK,MAAK,CAC9BN,gBAAiBM,EAAMD,KAAKL,mBAGQ,KAAzB8C,EAtCf,YAA8D,IAA5C9C,EAA2C,EAA3CA,gBAAiBkG,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SAAW,EAC3B/E,oBAAS,GADkB,mBACzCgF,GADyC,WAUnDC,EAAWH,EAAMI,KAAI,SAAC9C,EAAM+C,GAC9B,OACI,cAAC,EAAD,CAAMlD,KAAMG,EAAKT,QAAS/C,SAAUwD,EAAKgD,QAAS7F,MAAO6C,EAAK7C,MAAOiE,UAAWpB,EAAKoB,UAAWlE,GAAI8C,EAAK9C,QAI3G+F,EACF,qCACI,cAAC,EAAD,CAAS9C,YAfG,WAChByC,GAAW,GACXD,IACAC,GAAW,MAaH,qBAAKtC,UAAU,iBAK3B,OACA,sBAAKA,UAAU,oBAAf,UACK/D,GAAmB0G,EAEfR,EAASI,EAAW,cAAC,EAAD,UCZlBK,MAvBf,YACI,OAD6B,EAAPC,KAIlB,sBAAK7C,UAAU,aAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,+CAEJ,qBAAKA,UAAU,oBAAf,SACI,+CAEJ,qBAAKA,UAAU,oBAAf,SACI,+CAEJ,qBAAKA,UAAU,oBAAf,SACI,mD,QCeD8C,MAxBf,YAAkC,EAAXC,SAAY,IAAD,EACKzF,oBAAS,GADd,mBACvBuF,EADuB,KACjBG,EADiB,KAExBC,EAAUC,IAAMC,OAAO,MAE7B,OACI,sBAAKtB,QAAS,kBAAMmB,GAAoBH,IAAxC,UACI,qBAAK7C,UAAU,OAAf,SACI,cAAC,IAAD,CAAiB8B,KAAMsB,QAE3B,cAACC,EAAA,EAAD,CACIC,GAAIT,EACJI,QAASA,EACTM,WAAW,eACXC,QAAS,IACTC,eAAa,EALjB,SAOI,qBAAKC,IAAKT,EAAV,SACI,cAAC,EAAD,YChBPU,EAAW,SAAC1E,GAAD,8CAAa,WAAMC,GAAN,iBAAAV,EAAA,6DAC3BW,EAAS,CACXC,YAAa,UACbC,QAAS,CACL,OAAU,mBACV,eAAgB,qBALS,kBAUXZ,IAAMC,IAAN,UAAaC,wBAAb,iBAA2DQ,GAVhD,QAUvBQ,EAVuB,QAYrBC,KAAKhB,OACTX,QAAQW,MAAMe,EAAIC,KAAKhB,OACvBM,EAAS,CACLzC,KAAMZ,KAGVqD,EAAS,CACLzC,KAAMb,EACNc,QAASiD,EAAIC,OApBQ,gDAwB7BV,EAAS,CACLzC,KAAMZ,IAzBmB,yDAAb,uDCiCxB,IAIekD,eAJS,SAAAxC,GAAK,MAAK,CAC9BN,gBAAiBM,EAAMD,KAAKL,mBAGQ,CAAC2H,OC8EnB,yDAAM,WAAM1E,GAAN,mBAAAV,EAAA,6DAClBW,EAAS,CACXE,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,cAAeC,IAAQZ,IAAI,eAI7Ba,EAAOC,KAAKC,UAAU,CACxB,iBAAmB,IAVC,kBAcFhB,IAAMiB,KAAN,UAAcf,wBAAd,mBAA8DY,EAAMJ,GAdlE,QAcdQ,EAdc,QAgBZC,KAAKhB,OACTX,QAAQC,IAAIyB,EAAIC,KAAKhB,OACrBM,EAAS,CACLzC,KAAMhB,KAGVyD,EAAS,CACLzC,KAAMjB,IAvBM,gDA4BpB0D,EAAS,CACLzC,KAAMhB,IA7BU,yDAAN,wDD9EPsD,EApCf,YAA2D,EAA1C8E,MAA2C,IAApCD,EAAmC,EAAnCA,OAAgB3H,GAAmB,EAA3B6H,OAA2B,EAAnB7H,iBAE9B8H,EACF,sBAAK/D,UAAU,iBAAf,UACI,cAAC,IAAD,CAAMgE,OAAK,EAACC,GAAG,IAAf,kBACA,cAAC,IAAD,CAASD,OAAK,EAACC,GAAG,UAAlB,oBACA,cAAC,IAAD,CAASD,OAAK,EAACC,GAAG,UAAUpC,QAAS+B,EAArC,qBACA,cAAC,EAAD,UACI,cAAC,EAAD,SAKNM,EACF,sBAAKlE,UAAU,iBAAf,UACI,cAAC,IAAD,CAAMgE,OAAK,EAACC,GAAG,IAAf,kBACA,cAAC,IAAD,CAASD,OAAK,EAACC,GAAG,SAAlB,oBACA,cAAC,IAAD,CAASD,OAAK,EAACC,GAAG,YAAlB,sBACA,cAAC,EAAD,UACI,cAAC,EAAD,SAMZ,OACI,qBAAKjE,UAAU,mBAAf,SACM/D,EAAmB8H,EAAUG,OE3B5BC,MARf,WACI,OACI,qBAAKnE,UAAU,SAAf,SACI,6CCoBGjB,eAAQ,KAAM,CAACqF,mBFgEI,yDAAM,WAAMlF,GAAN,iBAAAV,EAAA,6DAC9BW,EAAS,CACXC,YAAa,UACbiF,KAAM,cACNhF,QAAS,CACL,OAAU,mBACV,eAAgB,qBANY,kBAWdZ,IAAMC,IAAN,UAAaC,wBAAb,0BAAoEQ,GAXtD,QAW1BQ,EAX0B,QAaxBC,KAAKhB,OAAsC,UAA7Be,EAAIC,KAAK3D,gBAC3BiD,EAAS,CACLzC,KAAMd,EACNe,SAAS,IAEuB,YAA7BiD,EAAIC,KAAK3D,iBAChBiD,EAAS,CACLzC,KAAMf,EACNgB,SAAS,IArBe,gDA0BhCwC,EAAS,CACLzC,KAAMd,EACNe,SAAS,IA5BmB,yDAAN,uDEhEgBiH,YAAnC5E,EAhBA,SAAC,GAAgD,IAA9CgE,EAA6C,EAA7CA,SAAUY,EAAmC,EAAnCA,SAAUS,EAAyB,EAAzBA,mBAMlC,OALA3G,qBAAU,WACN2G,IACAT,MACD,IAGC,qCACI,cAAC,EAAD,IACA,wBAAQ3D,UAAU,aAAlB,SACC+C,UCkBEuB,GA9BF,WAAO,IAAD,EACahH,oBAAS,GADtB,mBACR6E,EADQ,KACAoC,EADA,OAEWjH,mBAAS,IAFpB,mBAER8E,EAFQ,KAEDoC,EAFC,KAIT3F,EAAS,uCAAG,4BAAAL,EAAA,+EAGEC,IAAMC,IAAN,UAAaC,wBAAb,mBAHF,OAGVgB,EAHU,sFAMPA,GANO,wDAAH,qDAST0C,EAAQ,uCAAG,4BAAA7D,EAAA,sEACiBK,IADjB,OACP4F,EADO,OAEbD,EAASC,EAAgB7E,KAAK8E,QAAQ,IAFzB,2CAAH,qDAUd,OALAjH,qBAAU,WACN4E,IACAkC,GAAU,KACX,IAGJ,8BACK,cAAC,EAAD,CAASlC,SAAUA,EAAUD,MAAOA,EAAOD,OAAQA,OCuB5CpD,gBAJS,SAAAxC,GAAK,MAAK,CAC9BN,gBAAiBM,EAAMD,KAAKL,mBAGQ,CAAC4H,MJHpB,SAAC3H,EAAUyI,GAAX,8CAAwB,WAAMzF,GAAN,mBAAAV,EAAA,6DACnCW,EAAS,CACXC,YAAa,UACbC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,cAAeC,IAAQZ,IAAI,eAG7Ba,EAAOC,KAAKC,UAAU,CAAEvD,WAAUyI,aATC,kBAYnBlG,IAAMiB,KAAN,UAAcf,wBAAd,kBAA6DY,EAAMJ,GAZhD,QAY/BQ,EAZ+B,QAc7BC,KAAKhB,OACTX,QAAQC,IAAIyB,EAAIC,KAAKhB,OACrBM,EAAS,CACLzC,KAAMlB,MAIV2D,EAAS,CACLzC,KAAMnB,IAEV4D,EAASyE,MAxBwB,gDA4BrCzE,EAAS,CACLzC,KAAMlB,IA7B2B,yDAAxB,wDIGNwD,EA/CD,SAAR6F,EAAS,GAA8B,IAA7Bf,EAA4B,EAA5BA,MAAO5H,EAAqB,EAArBA,gBAAqB,EACNqB,mBAAS,CACvCpB,SAAU,GACVyI,SAAU,KAH0B,mBACjCE,EADiC,KACtBC,EADsB,KAMjC5I,EAAsB2I,EAAtB3I,SAAUyI,EAAYE,EAAZF,SAEXvE,EAAW,SAAAF,GAAC,OAAI4E,EAAa,2BAAID,GAAL,kBAAiB3E,EAAEG,OAAO1C,KAAOuC,EAAEG,OAAOvB,UAS5E,OAAI7C,EACO,cAAC,IAAD,CAAUgI,GAAG,MAIxB,qCACA,wDACA,qBAAKjE,UAAU,iBAAf,SAEI,uBAAMA,UAAU,eAAeC,SAAU,SAAAC,GAAC,OAhB7B,SAAAA,GACbjC,QAAQC,IAAI0G,GACZ1E,EAAEC,iBAEF0D,EAAM3H,EAAUyI,GAY8B1E,CAASC,IAAvD,UACI,cAAC,EAAD,IACA,sBAAKF,UAAU,cAAf,UACI,6CACA,uBAAOvD,KAAK,OAAO2D,SAAU,SAAAF,GAAC,OAAIE,EAASF,IAAIvC,KAAK,WAAWqC,UAAU,qBAAqBlB,MAAO5C,EAAUoE,YAAY,iBAAiBC,UAAQ,OAExJ,sBAAKP,UAAU,cAAf,UACI,6CACA,uBAAOvD,KAAK,WAAW2D,SAAU,SAAAF,GAAC,OAAIE,EAASF,IAAIvC,KAAK,WAAWqC,UAAU,qBAAqBlB,MAAO6F,EAAUrE,YAAY,iBAAiBC,UAAQ,OAE5J,uBAAO9D,KAAK,SAASuD,UAAU,gBAAgBlB,MAAM,sBC+BlDC,gBAJS,SAAAxC,GAAK,MAAK,CAC9BN,gBAAiBM,EAAMD,KAAKL,mBAGQ,CAAC8I,SLxDjB,SAAC7I,EAAUyI,EAAUxI,EAAO6I,GAA5B,8CAA6C,WAAM9F,GAAN,mBAAAV,EAAA,6DAC3DW,EAAS,CACXC,YAAa,UACbC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,cAAeC,IAAQZ,IAAI,eAI7Ba,EAAOC,KAAKC,UAAU,CAAEvD,WAAUyI,WAAUK,eAAc7I,UAVC,kBAa3CsC,IAAMiB,KAAN,UAAcf,wBAAd,qBAAgEY,EAAMJ,GAb3B,QAavDQ,EAbuD,QAerDC,KAAKhB,OACTX,QAAQW,MAAMe,EAAIC,KAAKhB,OACvBM,EAAS,CACLzC,KAAMpB,KAGV6D,EAAS,CACLzC,KAAMrB,IAtB+C,gDA0B7D8D,EAAS,CACLzC,KAAMpB,IA3BmD,yDAA7C,wDKwDT0D,EAnEE,SAAC,GAAmC,IAAjCgG,EAAgC,EAAhCA,SAAU9I,EAAsB,EAAtBA,gBAAsB,EACRqB,mBAAS,CAC7CpB,SAAU,GACVC,MAAO,GACPwI,SAAU,GACVK,aAAc,KAL8B,mBACzCC,EADyC,KAC3BC,EAD2B,OAOJ5H,oBAAS,GAPL,mBAOzC6H,EAPyC,KAOzBC,EAPyB,KAUzClJ,EAA2C+I,EAA3C/I,SAAUC,EAAiC8I,EAAjC9I,MAAOwI,EAA0BM,EAA1BN,SAAUK,EAAgBC,EAAhBD,aAE5B5E,EAAW,SAAAF,GAAC,OAAIgF,EAAgB,2BAAID,GAAL,kBAAoB/E,EAAEG,OAAO1C,KAAOuC,EAAEG,OAAOvB,UAclF,OAAIqG,EACO,cAAC,IAAD,CAAUlB,GAAG,WACbhI,EACA,cAAC,IAAD,CAAUgI,GAAG,MAKxB,qCACA,0DACA,qBAAKjE,UAAU,iBAAf,SAEI,uBAAMA,UAAU,eAAeC,SAAU,SAAAC,GAAC,OAtB7B,SAAAA,GACbjC,QAAQC,IAAI+G,GACZ/E,EAAEC,iBAEEwE,IAAaK,IACbD,EAAS7I,EAAUyI,EAAUxI,EAAO6I,GACpCI,GAAkB,IAgBwBnF,CAASC,IAAvD,UACI,cAAC,EAAD,IACA,sBAAKF,UAAU,cAAf,UACI,6CACA,uBAAOvD,KAAK,OAAO2D,SAAU,SAAAF,GAAC,OAAIE,EAASF,IAAIvC,KAAK,WAAWqC,UAAU,qBAAqBlB,MAAO5C,EAAUoE,YAAY,iBAAiBC,UAAQ,OAExJ,sBAAKP,UAAU,cAAf,UACI,0CACA,uBAAOvD,KAAK,QAAQ2D,SAAU,SAAAF,GAAC,OAAIE,EAASF,IAAIvC,KAAK,QAAQqC,UAAU,qBAAqBlB,MAAO3C,EAAOmE,YAAY,sBAAsBC,UAAQ,OAExJ,sBAAKP,UAAU,cAAf,UACI,8CACA,uBAAOvD,KAAK,WAAW2D,SAAU,SAAAF,GAAC,OAAIE,EAASF,IAAIvC,KAAK,WAAWqC,UAAU,qBAAqBlB,MAAO6F,EAAUpE,UAAQ,OAE/H,sBAAKP,UAAU,cAAf,UACI,uDACA,uBAAOvD,KAAK,WAAW2D,SAAU,SAAAF,GAAC,OAAIE,EAASF,IAAIvC,KAAK,eAAeqC,UAAU,qBAAqBlB,MAAOkG,EAAczE,UAAQ,OAEvI,uBAAO9D,KAAK,SAASuD,UAAU,gBAAgBlB,MAAM,wBCXlDuG,OArBf,WACE,OACE,cAAC,IAAD,CAAUrI,MAAOA,EAAjB,SACE,sBAAKgD,UAAU,MAAf,UACE,cAAC,IAAD,UAEE,eAAC,GAAD,WACE,cAAC,IAAD,CAAOgE,OAAK,EAACsB,KAAK,IAAIC,UAAWjB,KACjC,cAAC,IAAD,CAAON,OAAK,EAACsB,KAAK,YAAYC,UAAWC,KACzC,cAAC,IAAD,CAAOxB,OAAK,EAACsB,KAAK,SAASC,UAAWX,UAK1C,cAAC,EAAD,UChCOa,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFvI,SAASwI,eAAe,SAM1BZ,O","file":"static/js/main.e941d9b5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL'\nexport const AUTHENTICATE_SUCCESS = 'AUTHENTICATE_SUCCESS'\nexport const AUTHENTICATE_FAIL = 'AUTHENTICATE_FAIL'\n\n// load user\nexport const USER_SUCCESS = 'USER_SUCCESS'\nexport const USER_FAIL = 'USER_FAIL'\n\n\n// posts\nexport const POST_SUCCESS = 'POST_SUCCESS'\nexport const POST_FAIL = 'POST_FAIL'\n","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    AUTHENTICATE_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    AUTHENTICATE_FAIL,\n    POST_FAIL,\n    POST_SUCCESS\n} from '../actions/types'\n\nconst initState = {\n    isAuthenticated: null\n}\n\nexport default function(state = initState, action) {\n    const {type, payload} = action;\n\n    switch(type) {\n        case AUTHENTICATE_SUCCESS:\n        case AUTHENTICATE_FAIL:\n            return {\n                ...state,\n                isAuthenticated: payload\n            }\n        case REGISTER_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true\n            }\n        case LOGOUT_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case POST_SUCCESS:\n        case POST_FAIL:\n        case REGISTER_FAIL:\n        case LOGIN_FAIL:\n        case LOGOUT_FAIL:\n            return state\n        default:\n            return state\n    }\n}","import {\n    USER_SUCCESS,\n    USER_FAIL\n} from '../actions/types'\n\nconst initState = {\n    isAuthenticated: null,\n    username: '',\n    email: '',\n    liking: ''\n}\n\nexport default function(state = initState, action) {\n    const {type, payload} = action;\n\n    switch(type) {\n        case USER_SUCCESS:\n            return {\n                ...state,\n                id: payload.id,\n                username: payload.username,\n                email: payload.email,\n                liking: payload.likes\n\n\n            }\n        case USER_FAIL: \n            return {\n                ...state,\n                id: '',\n                username: '',\n                email: '',\n                liking: ''\n            }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport auth from './auth'\nimport user from './user'\n\nexport default combineReducers({\n    auth,\n    user\n})","import {createStore, applyMiddleware} from 'redux'\n// lets us analyze redux state\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst initState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore( \n    rootReducer,\n    initState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Cookies from 'js-cookie'\n\nconst CSRFToken = () => {\n    const [csrftoken, setcsrftoken] = useState('');\n\n    useEffect(() => {\n        const getCookie = (name) => {\n            let cookieValue = null;\n            if (document.cookie && document.cookie !== '') {\n                const cookies = document.cookie.split(';');\n                console.log(cookies);\n                for (let i = 0; i < cookies.length; i++) {\n                    const cookie = cookies[i].trim();\n                    // Does this cookie string begin with the name we want?\n                    console.log(cookie.substring(0, name.length + 1))\n                    if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                        break;\n                    }\n                }\n            } else {\n                console.log('error with document.cookie')\n            }\n            console.log(cookieValue)\n            return cookieValue;\n        }\n\n        const fetchData = async () => {\n            try {\n                await axios.get(`${process.env.REACT_APP_API_URL}/network/csrf_cookie`)\n                console.log(\"successfully fetched csrf\");\n            } catch(err) {\n                console.error(\"an error occured fetching csrf\");\n            }\n        };\n\n        fetchData();\n        setcsrftoken(getCookie(\"csrftoken\"));\n        console.log(getCookie('csrftoken'))\n        console.log(csrftoken);\n    }, []);\n\n    return (\n        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken}/>\n    )\n}\n\nexport default CSRFToken;","import { set } from 'js-cookie';\nimport React, { useState } from 'react'\nimport { create } from '../actions/post';\nimport { connect } from 'react-redux';\nimport CSRFToken from '../components/CSRFToken';\n\nfunction Compose({ create, createdPost }) {\n    const [composeForm, setComposeForm] = useState({\n        content: ''\n    })\n    const [created, setCreated] = useState(false)\n\n    const {content} = composeForm\n    \n    const onChange = e => setComposeForm({...composeForm, [e.target.name]: e.target.value })\n\n    const onSubmit = e => {\n        e.preventDefault()\n        create(content)\n        console.log(composeForm)\n        createdPost()\n        setComposeForm({content: \"\"});\n    }\n\n    return (\n        <div className=\"compose_container\">\n            <div className=\"compose_section\">\n                <div className=\"image_circle\"><div className=\"inner_image\"></div><div className=\"inner_image2\"></div></div>\n                <form onSubmit={e => onSubmit(e)}>\n                <CSRFToken/>\n                <input type=\"text\" onChange={e => onChange(e)} name=\"content\" className=\"compose_in\" value={content} placeholder=\"What's on your mind?\" required></input>\n                \n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(null,  {create} )(Compose)","import Cookies from 'js-cookie';\nimport axios from 'axios';\nimport {\n    POST_SUCCESS,\n    POST_FAIL\n} from './types'\n\nexport const create = (content) => async dispatch => {\n    const config = {\n        credentials: 'include',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({ content });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/network/create`, body, config)\n\n        if (res.data.error) {\n            console.error(res.data.error)\n            dispatch({\n                type: POST_FAIL\n            });\n        } else {\n            dispatch({\n                type: POST_SUCCESS\n            })\n        }\n    } catch(err) {\n        dispatch({\n            type: POST_FAIL\n        })\n    }\n}\n\nexport const update = (content, postID) => async dispatch => {\n    const config = {\n        credentials: 'include',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({ content });\n    const id = postID;\n\n    try {\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/network/create/${id}`, body, config)\n    } catch(err) {}\n\n}\n\nexport const like = (id) => async dispatch => {\n    const config = {\n        credentials: 'include',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({\n        'withCredentials': true\n    });\n\n    try {\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/network/like/${id}`, body, config)\n    } catch(err) {}\n\n}","import React, { useState, useEffect } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\nimport { connect } from 'react-redux';\nimport { update } from '../actions/post';\nimport { like } from '../actions/post';\n\nfunction Post({body, id, username, likes, timestamp, sessionUser, sessionLikes, update, isAuthenticated, like}) {\n    // Editing post.\n    const [originalLike, setLike] = useState(false);\n    const [editing, setEditing] = useState(false);\n    const [bodyPost, setBodyPost] = useState(body);\n    const [editForm, setEditForm] = useState({content: body})\n\n    useEffect(() => {\n        console.log(sessionUser.likes + 'a')\n        console.log(sessionUser.likes.includes(id));\n\n        const binarySearchPostId = () => {\n            let end = sessionLikes.length - 1;\n            let start = 0;\n            while (start <= end) {\n                let mid = start + (end - start) / 2\n                if (id === sessionLikes[mid]) {\n                    return true;\n                }\n                if (id > sessionLikes[mid]) {\n                    start = mid + 1;\n                } else {\n                    end = mid - 1;\n                }\n            }\n            return false;\n        }\n\n        setLike(binarySearchPostId())\n    }, []);\n\n    const {content} = editForm\n\n    const onChange = e => setEditForm({...editForm, [e.target.name]: e.target.value })\n\n    const onSubmit = e => {\n        console.log(editForm)\n        e.preventDefault()\n        update(content, id)\n        setBodyPost(content);\n        setEditing(!editing);\n    }\n\n    const handleClick = (e) => {\n        setEditing(!editing);\n    }\n\n    // liking post\n    const likeClick = (e) => {\n        setLike(!originalLike);\n        like(id);\n    }\n\n    const EditPost = (\n        <>\n        <form onSubmit={e => onSubmit(e)}>\n            <input name=\"content\" className=\"registration_input\" value={content} onChange={e => onChange(e)}></input>\n        </form>\n        </>\n    )\n\n    return (\n        <div className=\"post_container\">\n            <div className=\"profile_section\">\n                <div className=\"image_circle\">\n                    <div className=\"inner_image\"></div>\n                    <div className=\"inner_image2\"></div>\n                </div>\n                <div className=\"header_post\">\n                    <div className=\"username_post\"><p>{username}</p></div>\n                    <div className=\"date_post\"><p>{timestamp}</p></div>\n                </div>\n            </div>\n            <div className=\"break\"></div>\n            <div className=\"body_section\">\n                {editing ? EditPost : <span>{bodyPost}</span>}\n                <div className=\"like_container\">\n                    <span> {isAuthenticated ? (<FontAwesomeIcon className={`like_auth ${originalLike && 'like_auth_active'}`} onClick={(e) => likeClick()} icon={faHeart} color={\"grey\"}>\n                        </FontAwesomeIcon>) : (<FontAwesomeIcon icon={faHeart} color={\"grey\"}>\n                        </FontAwesomeIcon>)\n                    }\n                    </span>\n                    <span>{originalLike ? likes + 1 : likes}</span>\n                    {sessionUser.username === username &&\n                    <button onClick={(e) => handleClick()} value={\"edit\"}> {editing ? 'X' : 'Edit' }</button>}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    sessionUser: state.user,\n    sessionLikes: state.user.liking,\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, {update, like})(Post);","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction Load() {\n    return (\n        <div className=\"load\">\n            <p> loading </p>\n            <FontAwesomeIcon className=\"load_spin\" icon={faSyncAlt}/>\n            \n        </div>\n    )\n}\n\nexport default Load\n","import React, { useState, useEffect } from 'react'\nimport Post from \"./Post.js\"\nimport Compose from \"./Compose.js\"\nimport axios from 'axios'\nimport Load from './Load.js'\nimport { connect } from 'react-redux'\n\nfunction PostBox({isAuthenticated, loaded, posts, getPosts}) {\n    const [created, setCreated] = useState(false)\n    \n    const createdPost = () => {\n        setCreated(true)\n        getPosts()\n        setCreated(false)\n\n    }\n\n    const postList = posts.map((post, index) => {\n        return (\n            <Post body={post.content} username={post.creator} likes={post.likes} timestamp={post.timestamp} id={post.id}></Post>\n        )\n    })\n\n    const authComp = (\n        <>\n            <Compose createdPost={createdPost}/>\n                <div className=\"break_out\"/>\n        </>\n    )\n    \n\n    return (\n    <div className=\"postBox_container\">\n        {isAuthenticated && authComp} \n        \n            {loaded ? postList : <Load/>}\n    </div>\n    )\n\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, null)(PostBox)","function NotificationBox({open}) {\n    return (\n        \n        \n        <div className=\"notify_box\">\n            <div className=\"notification_item\">\n                <p>notification</p>\n            </div>\n            <div className=\"notification_item\">\n                <p>notification</p>\n            </div>     \n            <div className=\"notification_item\">\n                <p>notification</p>\n            </div>\n            <div className=\"notification_item\">\n                <p>notification</p>\n            </div>\n  \n        </div>\n\n    )\n}\n\nexport default NotificationBox","import React, { useState } from 'react'\nimport NotificationBox from './NotificationBox.js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBell } from '@fortawesome/free-solid-svg-icons'\nimport { CSSTransition } from 'react-transition-group';\n\nfunction Notification({children}) {\n    const [open, setNotificationBox] = useState(false);\n    const nodeRef = React.useRef(null)\n\n    return (\n        <div onClick={() => setNotificationBox(!open)}>\n            <div className=\"bell\">\n                <FontAwesomeIcon icon={faBell}></FontAwesomeIcon>\n            </div>\n            <CSSTransition\n                in={open}\n                nodeRef={nodeRef}\n                classNames=\"menu-primary\"\n                timeout={1000}\n                unmountOnExit\n            >\n                <div ref={nodeRef}>\n                    <NotificationBox/>\n                </div>\n            </CSSTransition>\n        </div>\n    )\n}\n\nexport default Notification","import Cookies from 'js-cookie';\nimport axios from 'axios';\nimport {\n    USER_SUCCESS,\n    USER_FAIL\n} from './types'\n\nexport const get_user = (content) => async dispatch => {\n    const config = {\n        credentials: 'include',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n    };\n\n    try {\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/network/user`, config)\n\n        if (res.data.error) {\n            console.error(res.data.error)\n            dispatch({\n                type: USER_FAIL\n            });\n        } else {\n            dispatch({\n                type: USER_SUCCESS,\n                payload: res.data\n            })\n        }\n    } catch(err) {\n        dispatch({\n            type: USER_FAIL\n        })\n    }\n}","\nimport {NavLink, Link} from 'react-router-dom';\nimport Notification from './Notification.js';\nimport NotificationBox from './NotificationBox.js';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/auth';\nimport { set } from 'js-cookie';\n\nfunction NavBar({login, logout, follow, isAuthenticated }) {\n    \n    const authNav = (\n        <div className=\"navbar_wrapper\">\n            <Link exact to=\"/\">Home</Link>\n            <NavLink exact to=\"/follow\">Follow</NavLink>\n            <NavLink exact to=\"/logout\" onClick={logout}>Log Out</NavLink>\n            <Notification>\n                <NotificationBox/>\n            </Notification>\n        </div>\n    );\n    \n    const anonNav = (\n        <div className=\"navbar_wrapper\">\n            <Link exact to=\"/\">Home</Link>\n            <NavLink exact to=\"/login\">Log In</NavLink>\n            <NavLink exact to=\"/register\">Register</NavLink>\n            <Notification>\n                <NotificationBox/>\n            </Notification>\n        </div>\n    );\n    \n\n    return (\n        <div className=\"navbar_container\">\n            {(isAuthenticated) ? authNav : anonNav}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, {logout})(NavBar);","import Cookies from 'js-cookie';\nimport axios from 'axios';\nimport { get_user } from './user'\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    AUTHENTICATE_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    AUTHENTICATE_FAIL\n} from './types'\n\n\n\n// it matters what order these variables are.\nexport const register = (username, password, email, confirmation) => async dispatch => {\n    const config = {\n        credentials: 'include',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({ username, password, confirmation, email });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/network/register`, body, config)\n\n        if (res.data.error) {\n            console.error(res.data.error)\n            dispatch({\n                type: REGISTER_FAIL\n            });\n        } else {\n            dispatch({\n                type: REGISTER_SUCCESS\n            })\n        }\n    } catch(err) {\n        dispatch({\n            type: REGISTER_FAIL\n        })\n    }\n}\n\n// redux thunk lets us do dispatch\nexport const login = (username, password) => async dispatch => {\n    const config = {\n        credentials: 'include',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n    const body = JSON.stringify({ username, password })\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/network/login`, body, config)\n\n        if (res.data.error) {\n            console.log(res.data.error)\n            dispatch({\n                type: LOGIN_FAIL\n            })\n            // load user\n        } else {\n            dispatch({\n                type: LOGIN_SUCCESS\n            })\n            dispatch(get_user())\n        }\n\n    } catch(err) {\n        dispatch({\n            type: LOGIN_FAIL\n        })\n\n    }\n\n}\n\n// redux thunk lets us do dispatch\nexport const checkAuthenticated = () => async dispatch => {\n    const config = {\n        credentials: 'include',\n        mode: 'same-origin',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n    }\n\n    try {\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/network/authenticated`, config)\n\n        if (res.data.error || res.data.isAuthenticated === 'error') {\n            dispatch({\n                type: AUTHENTICATE_FAIL,\n                payload: false\n            })\n        } else if (res.data.isAuthenticated === \"success\") {\n            dispatch({\n                type: AUTHENTICATE_SUCCESS,\n                payload: true\n            })\n        }\n\n    } catch(err) {\n        dispatch({\n            type: AUTHENTICATE_FAIL,\n            payload: false\n        })\n\n    }\n\n}\n\nexport const logout = () => async dispatch => {\n    const config = {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFTOKEN': Cookies.get('csrftoken')\n        }\n    }\n\n    const body = JSON.stringify({\n        'withCredentials': true\n    });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/network/logout`, body, config)\n\n        if (res.data.error) {\n            console.log(res.data.error)\n            dispatch({\n                type: LOGOUT_FAIL\n            })\n        } else {\n            dispatch({\n                type: LOGOUT_SUCCESS\n            })\n        }\n\n    } catch(err) {\n        dispatch({\n            type: LOGOUT_FAIL\n        })\n\n    }\n\n}\n\nexport const create = (content) => async dispatch => {\n    const config = {\n        credentials: 'include',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({ content });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/network/create`, body, config)\n    } catch(err) {\n\n    }\n}","function Footer() {\n    return (\n        <div className=\"footer\">\n            <span>Footer</span>\n        </div>\n    )\n}\n\nexport default Footer","import React, {useEffect, useState} from 'react';\nimport Navbar from \"../components/NavBar\";\nimport {connect} from 'react-redux';\nimport { checkAuthenticated} from '../actions/auth';\nimport NotificationBox from '../components/NotificationBox';\nimport { get_user } from '../actions/user'\n\nconst Layout = ({ children, get_user, checkAuthenticated }) => {\n    useEffect(() => {\n        checkAuthenticated();\n        get_user();\n    }, []);\n    \n    return (\n        <>\n            <Navbar/>\n            <header className=\"App-header\">\n            {children}\n            </header>\n        </>\n    )\n}\n\nexport default connect(null, {checkAuthenticated, get_user})(Layout)","import axios from 'axios';\nimport React, { useState, useEffect } from 'react'\nimport PostBox from '../components/PostBox'\n\n\nconst Home = () => {\n    const [loaded, setLoaded] = useState(false);\n    const [posts, setPosts] = useState([])\n   \n    const fetchData = async () => {\n        let res\n        try {\n            res = await axios.get(`${process.env.REACT_APP_API_URL}/network/posts`)\n        } catch(err) {}\n\n        return res;\n    };\n\n    const getPosts = async () => {\n        const tasksFromServer = await fetchData()\n        setPosts(tasksFromServer.data.iterate[1]);\n    }\n\n    useEffect(() => {\n        getPosts();\n        setLoaded(true);\n    }, []);\n\n    return ( \n   <div>\n        <PostBox getPosts={getPosts} posts={posts} loaded={loaded} />\n    </div>\n    )\n}\n\nexport default Home","import React, { useState } from 'react';\nimport CSRFToken from '../components/CSRFToken';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/auth';\n\nconst Login = ({login, isAuthenticated}) => {\n    const [loginForm, setLoginForm] = useState({\n        username: '',\n        password: ''\n    })\n\n    const {username, password} = loginForm\n\n    const onChange = e => setLoginForm({...loginForm, [e.target.name]: e.target.value })\n\n    const onSubmit = e => {\n        console.log(Login)\n        e.preventDefault()\n\n        login(username, password)\n    }\n\n    if (isAuthenticated) {\n        return <Redirect to=\"/\"/>\n    }\n\n    return (\n    <>\n    <h1>Log Into your Account.</h1>\n    <div className=\"form_container\">\n        \n        <form className=\"form_wrapper\" onSubmit={e => onSubmit(e)}>\n            <CSRFToken />\n            <div className=\"input_field\">\n                <label>Username</label>\n                <input type=\"text\" onChange={e => onChange(e)} name=\"username\" className=\"registration_input\" value={username} placeholder=\"Enter Username\" required></input>\n            </div>\n            <div className=\"input_field\">\n                <label>Password</label>\n                <input type=\"password\" onChange={e => onChange(e)} name=\"password\" className=\"registration_input\" value={password} placeholder=\"Enter Password\" required></input>\n            </div>\n            <input type=\"submit\" className=\"submit_button\" value=\"Log in\"></input>\n        </form>\n    </div>\n    </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, {login})(Login);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { register } from '../actions/auth';\nimport { Redirect } from 'react-router-dom';\nimport CSRFToken from '../components/CSRFToken';\n\nconst Register = ({ register, isAuthenticated }) => {\n    const [registerForm, setRegisterForm] = useState({\n        username: '',\n        email: '',\n        password: '',\n        confirmation: ''\n    })\n    const [accountCreated, setAccountCreated] = useState(false)\n\n    // Set default as empty\n    const {username, email, password, confirmation} = registerForm\n\n    const onChange = e => setRegisterForm({...registerForm, [e.target.name]: e.target.value })\n\n    // maybe add something to live check if username/email already exists.\n\n    const onSubmit = e => {\n        console.log(registerForm)\n        e.preventDefault()\n\n        if (password === confirmation) {\n            register(username, password, email, confirmation);\n            setAccountCreated(true);\n        }\n    }\n\n    if (accountCreated) {\n        return <Redirect to=\"/login\"/>\n    } else if (isAuthenticated) {\n        return <Redirect to=\"/\"/>\n    }\n\n    \n    return ( \n    <>\n    <h1>Register for an Account.</h1>\n    <div className=\"form_container\">\n        \n        <form className=\"form_wrapper\" onSubmit={e => onSubmit(e)}>\n            <CSRFToken />\n            <div className=\"input_field\">\n                <label>Username</label>\n                <input type=\"text\" onChange={e => onChange(e)} name=\"username\" className=\"registration_input\" value={username} placeholder=\"Enter Username\" required></input>\n            </div>\n            <div className=\"input_field\">\n                <label>Email</label>\n                <input type=\"email\" onChange={e => onChange(e)} name=\"email\" className=\"registration_input\" value={email} placeholder=\"Enter email address\" required></input>\n            </div>\n            <div className=\"input_field\">\n                <label>Password:</label>\n                <input type=\"password\" onChange={e => onChange(e)} name=\"password\" className=\"registration_input\" value={password} required></input>\n            </div>\n            <div className=\"input_field\">\n                <label>Re-enter password:</label>\n                <input type=\"password\" onChange={e => onChange(e)} name=\"confirmation\" className=\"registration_input\" value={confirmation} required></input>\n            </div>\n            <input type=\"submit\" className=\"submit_button\" value=\"register\"></input>\n        </form>\n    </div>\n    </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, {register} )(Register)","import logo from './logo.svg';\nimport './App.css';\n\n// Get redux in app\nimport {Provider} from 'react-redux'\nimport store from './store'\n\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport Compose from \"./components/Compose.js\"\nimport PostBox from \"./components/PostBox.js\"\nimport Post from \"./components/Post.js\"\nimport NavBar from \"./components/NavBar.js\"\nimport Footer from \"./components/Footer.js\"\n\nimport Layout from \"./hoc/Layout.js\"\nimport Home from \"./containers/Home.js\"\nimport Login from \"./containers/Login.js\"\nimport Register from \"./containers/Register.js\"\nimport Notification from './components/Notification'\nimport NotificationBox from './components/NotificationBox'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoffee, faSyncAlt } from '@fortawesome/free-solid-svg-icons'\n\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\n\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Router>\n        \n          <Layout>\n            <Route exact path='/' component={Home}/>\n            <Route exact path='/register' component={Register}/>\n            <Route exact path='/login' component={Login}/>\n            \n          </Layout>\n          \n        </Router>\n        <Footer></Footer>\n        {/* <button onClick={Login}></button> */}\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}